#pragma once
#include <string>

#define MAKE_ID(name, code, uuid) static const std::string name ##_ ##code = #uuid
#define DECLARE_ID_LIST(...) const std::initializer_list<std::string> AsList { __VA_ARGS__ };

// We need cards that will be represented by the web api
// Here we can create UUID strings to use for in-game rewards
// NOTE: if you have your own Web API server, you need
//       to use the new UUIDs generated by the web api
namespace BuiltInCards {
    MAKE_ID(Cannon, A, 5e00025204648c1e215f3a6b);
    MAKE_ID(Cannon, WILD, 5e00025204648c1e215f3a6e);
    MAKE_ID(Reflect, A, 5e024a631cd1b708dd08d7da);
    MAKE_ID(Invis, WILD, 5e9bfe5d80252843de17eadb);
    MAKE_ID(YoYo, M, 5e00065b04648c1e215f3a83);
    MAKE_ID(YoYo, L, 5e00065b04648c1e215f3a84);
    MAKE_ID(ElecPulse, B, 5e0247641cd1b708dd08d7be);
    MAKE_ID(ElecPulse, WILD, 5e0247641cd1b708dd08d7c0);
    MAKE_ID(Tornado, T, 5e0247b11cd1b708dd08d7c2);
    MAKE_ID(Recov3000, WILD, 5e126ef61cd1b708dd08d7f4);
    MAKE_ID(Protoman, B, 5e024bc61cd1b708dd08d7e5);

    DECLARE_ID_LIST(
      Cannon_A, Cannon_WILD, Reflect_A, Invis_WILD,
      YoYo_L, YoYo_M, ElecPulse_B, ElecPulse_WILD,
      Tornado_T, Recov3000_WILD, Protoman_B
    );
}

#undef MAKE_ID
#undef DECLARE_ID_LIST